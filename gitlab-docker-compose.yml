version: '3'

services:
  django_sql_service:
    # os起動時(Docker起動時)にコンテナを再起動さる場合
    # restart: always
    # ComposeFileを実行しビルドされるときのルートパス
    # このフォルダにDockerファイルを置く
    build:
      context: .
      dockerfile: ./docker_srv/Dockerfile
    image: django_sql_img
    networks:
      - aws_django_sql_network
    # Hostname
    hostname: django_sql_host

    # コンテナ名
    container_name: 'django_sql_container'

    # コンテナを終了させたくない場合に設定
    tty: true
    # ローカルフォルダとコンテナ内のマウントディレクトリの関連づけ
    volumes:
      - .:/project
    # 内部通信をするので不要
    ports:
      - 8000:8000
    # PORT開放
    expose:
      - 8000
    #command: [python, manage.py, runserver, 0.0.0.0:8000]
    # コンテナ内のワーキングディレクトリ
    working_dir: '/project/workspace/django_sql'
    # Django起動 直接の場合はhttp, nginx経由の場合はsocketを使用する
    #command: [uwsgi, --http, 0.0.0.0:8000, --buffer-size, "327670", --wsgi-file, django_sql/wsgi.py]
    command: [uwsgi, --socket, 0.0.0.0:8000, --buffer-size, "327670", --wsgi-file, django_sql/wsgi.py]

  nginx_web_service:
    build:
      context: .
      dockerfile: ./docker_nginx/Dockerfile
    networks:
      - aws_django_sql_network
    # Hostname
    hostname: nginx_web_host
    # コンテナ名
    container_name: nginx_con01
    volumes:
      - ./workspace/django_sql/static:/static
    ports:
      - 80:80
    depends_on:
      - django_sql_service
    # PORT開放
    expose:
      - 80

networks:
  aws_django_sql_network:

