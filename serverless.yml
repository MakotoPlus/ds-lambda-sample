service: ds-lambda-sample

frameworkVersion: '3'

custom:
  stage: ${opt:stage, 'dev'}
  #run_role: "arn:aws:iam::847754671288:role/SQS-Lambda-Admin"

provider:
  name: aws
  stage: ${self:custom.stage}
  runtime: python3.9
  region: ap-northeast-1
  #iam:
  #  role:
  iamRoleStatements:
    - Effect: Allow
      Action:
        # default
        - logs:CreateLogStream # default
        - logs:PutLogEvents # default
        # - logs:CreateLogGroup
        # CloudWatchReacOnlyAccess
        - 'autoscaling:Describe*'
        - 'cloudwatch:Describe*'
        - 'cloudwatch:Get*'
        - 'cloudwatch:List*'
        - 'logs:Get*'
        - 'logs:List*'
        - 'logs:Describe*'
        - 'logs:TestMetricFilter'
        - 'logs:FilterLogEvents'
        - 'sns:Get*'
        - 'sns:List*'
        - 'iam:GetRole'
        - 'iam:PassRole'
        - 'rds:StartDBInstance'
        - 'rds:StopDBInstance'
      Resource:
        - '*'
  #iam:
  #  role:
  #    ${self:custom.run_role}

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  patterns:
    - '!package.json'
    - '!package-lock.json'
    - '!README.md'
    - '!node_modules/**'
    - '!func/**'
    - '!**/**/**/Dockerfile'
    - '!**/**/**/requirements.txt'
    #- include-me.py
    #- include-me-dir/**


functions:
  hello-sample-01:
    handler: func/hello-sample-01/src/lambda_function.handler

  on-off:
    handler: func/on-off/src/lambda_function.handler
