service: ds-lambda-sample

frameworkVersion: '3'

useDotenv: false
custom:
  stage: ${opt:stage, 'dev'}
  stg-env: ${file(./serverless/${self:provider.stage}.yml)}

provider:
  name: aws
  stage: ${self:custom.stage}
  runtime: python3.9
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        # default
        - logs:CreateLogStream # default
        - logs:PutLogEvents # default
        # - logs:CreateLogGroup
        - 'autoscaling:Describe*'
        - 'cloudwatch:Describe*'
        - 'cloudwatch:Get*'
        - 'cloudwatch:List*'
        - 'logs:Get*'
        - 'logs:List*'
        - 'logs:Describe*'
        - 'logs:TestMetricFilter'
        - 'logs:FilterLogEvents'
        - 'sns:Get*'
        - 'sns:List*'
        - 'iam:GetRole'
        - 'iam:PassRole'
        - 'rds:StartDBInstance'
        - 'rds:StopDBInstance'
        - 'rds:DescribeDBInstances'
        - 'events:DisableRule'
        - 'events:EnableRule'
        - 'ecs:UpdateService'
      Resource:
        - '*'
  # you can define service wide environment variables here
  #environment:

plugins:
  - serverless-offline
  # ${env:XXX}とか使うプラグイン
  - serverless-dotenv-plugin
  #- serverless-jest-plugin
  #- serverless-stack-output # Allows us to output endpoint url to json file

# you can add packaging information here
package:
  patterns:
    - '!node_modules/**'
    - '!func/**'
    - '!serverless/**'
    - '!*.json'
    - '!README.md'
    - '!serverless.*'


functions:
  on-off:
    handler: func/on-off/src/lambda_function.handler
    package:
      patterns:
        - func/on-off/src/*.py
      individually: true
    events:
      - schedule:
          rate: ${self:custom.stg-env.ON-Rate-01}
          name: on-schduler
          description: 'RDS, EventBridge, ECS ON SCHEDULE'
          input:
            switch: "on"
            region: ${self:provider.region}
            DBInstanceIdentifier: ${self:custom.stg-env.DBInstanceIdentifier-01}
            EventBridge: ${self:custom.stg-env.EventBridge-01}
            EcsService: ${self:custom.stg-env.EcsService-01}
      - schedule:  
          rate: ${self:custom.stg-env.OFF-Rate-01}
          name: off-schduler
          description: 'RDS, EventBridge, ECS OFF SCHEDULE'
          input:
            switch: "off"
            region: ${self:provider.region}
            DBInstanceIdentifier: ${self:custom.stg-env.DBInstanceIdentifier-01}
            EventBridge: ${self:custom.stg-env.EventBridge-01}
            EcsService: ${self:custom.stg-env.EcsService-01}
